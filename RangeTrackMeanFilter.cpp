#include "RangeTrackMeanFilter.h"

RangeTrackMeanFilter::RangeTrackMeanFilter(long blur)
{
    m_blur = blur;
}

void RangeTrackMeanFilter::Filter(vector<long> & raw, vector<long> & filtered)
// don't delete the following line as it's needed to preserve source code of this autogenerated element
// section -64--88-1-7-672b1494:1245fa68a9a:-8000:0000000000000FC6 begin
{
	// segfault in this method


	// this should be handled by a reset() or a constructor... it's wasteful to do it always
	while(filtered.size() < m_blur/2)
	{
		//printf("filtered.size() is %d\n", filtered.size());
		filtered.push_back(0);
	}

	while( ((long)raw.size()) - ((long)filtered.size()) > m_blur/2)
	{
	    int num=0, denom=0;
	    for(long count=filtered.size()-m_blur/2; count <= filtered.size()+m_blur/2; count++)
	    {
	        num += raw[count];
	        denom++;
	    }

	    filtered.push_back(num/denom);
	}
}
// section -64--88-1-7-672b1494:1245fa68a9a:-8000:0000000000000FC6 end
// don't delete the previous line as it's needed to preserve source code of this autogenerated element
